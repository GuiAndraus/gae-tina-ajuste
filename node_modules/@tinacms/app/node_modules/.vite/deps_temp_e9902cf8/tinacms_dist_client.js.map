{
  "version": 3,
  "sources": ["../../../../../async-lock/lib/index.js", "../../../../../async-lock/index.js", "../../tinacms/dist/client.mjs"],
  "sourcesContent": ["'use strict';\r\n\r\nvar AsyncLock = function (opts) {\r\n\topts = opts || {};\r\n\r\n\tthis.Promise = opts.Promise || Promise;\r\n\r\n\t// format: {key : [fn, fn]}\r\n\t// queues[key] = null indicates no job running for key\r\n\tthis.queues = Object.create(null);\r\n\r\n\t// lock is reentrant for same domain\r\n\tthis.domainReentrant = opts.domainReentrant || false;\r\n\tif (this.domainReentrant) {\r\n\t\tif (typeof process === 'undefined' || typeof process.domain === 'undefined') {\r\n\t\t\tthrow new Error(\r\n\t\t\t\t'Domain-reentrant locks require `process.domain` to exist. Please flip `opts.domainReentrant = false`, ' +\r\n\t\t\t\t'use a NodeJS version that still implements Domain, or install a browser polyfill.');\r\n\t\t}\r\n\t\t// domain of current running func {key : fn}\r\n\t\tthis.domains = Object.create(null);\r\n\t}\r\n\r\n\tthis.timeout = opts.timeout || AsyncLock.DEFAULT_TIMEOUT;\r\n\tthis.maxOccupationTime = opts.maxOccupationTime || AsyncLock.DEFAULT_MAX_OCCUPATION_TIME;\r\n\tthis.maxExecutionTime = opts.maxExecutionTime || AsyncLock.DEFAULT_MAX_EXECUTION_TIME;\r\n\tif (opts.maxPending === Infinity || (Number.isInteger(opts.maxPending) && opts.maxPending >= 0)) {\r\n\t\tthis.maxPending = opts.maxPending;\r\n\t} else {\r\n\t\tthis.maxPending = AsyncLock.DEFAULT_MAX_PENDING;\r\n\t}\r\n};\r\n\r\nAsyncLock.DEFAULT_TIMEOUT = 0; //Never\r\nAsyncLock.DEFAULT_MAX_OCCUPATION_TIME = 0; //Never\r\nAsyncLock.DEFAULT_MAX_EXECUTION_TIME = 0; //Never\r\nAsyncLock.DEFAULT_MAX_PENDING = 1000;\r\n\r\n/**\r\n * Acquire Locks\r\n *\r\n * @param {String|Array} key \tresource key or keys to lock\r\n * @param {function} fn \tasync function\r\n * @param {function} cb \tcallback function, otherwise will return a promise\r\n * @param {Object} opts \toptions\r\n */\r\nAsyncLock.prototype.acquire = function (key, fn, cb, opts) {\r\n\tif (Array.isArray(key)) {\r\n\t\treturn this._acquireBatch(key, fn, cb, opts);\r\n\t}\r\n\r\n\tif (typeof (fn) !== 'function') {\r\n\t\tthrow new Error('You must pass a function to execute');\r\n\t}\r\n\r\n\t// faux-deferred promise using new Promise() (as Promise.defer is deprecated)\r\n\tvar deferredResolve = null;\r\n\tvar deferredReject = null;\r\n\tvar deferred = null;\r\n\r\n\tif (typeof (cb) !== 'function') {\r\n\t\topts = cb;\r\n\t\tcb = null;\r\n\r\n\t\t// will return a promise\r\n\t\tdeferred = new this.Promise(function(resolve, reject) {\r\n\t\t\tdeferredResolve = resolve;\r\n\t\t\tdeferredReject = reject;\r\n\t\t});\r\n\t}\r\n\r\n\topts = opts || {};\r\n\r\n\tvar resolved = false;\r\n\tvar timer = null;\r\n\tvar occupationTimer = null;\r\n\tvar executionTimer = null;\r\n\tvar self = this;\r\n\r\n\tvar done = function (locked, err, ret) {\r\n\r\n\t\tif (occupationTimer) {\r\n\t\t\tclearTimeout(occupationTimer);\r\n\t\t\toccupationTimer = null;\r\n\t\t}\r\n\r\n\t\tif (executionTimer) {\r\n\t\t\tclearTimeout(executionTimer);\r\n\t\t\texecutionTimer = null;\r\n\t\t}\r\n\r\n\t\tif (locked) {\r\n\t\t\tif (!!self.queues[key] && self.queues[key].length === 0) {\r\n\t\t\t\tdelete self.queues[key];\r\n\t\t\t}\r\n\t\t\tif (self.domainReentrant) {\r\n\t\t\t\tdelete self.domains[key];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!resolved) {\r\n\t\t\tif (!deferred) {\r\n\t\t\t\tif (typeof (cb) === 'function') {\r\n\t\t\t\t\tcb(err, ret);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//promise mode\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\tdeferredReject(err);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdeferredResolve(ret);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tresolved = true;\r\n\t\t}\r\n\r\n\t\tif (locked) {\r\n\t\t\t//run next func\r\n\t\t\tif (!!self.queues[key] && self.queues[key].length > 0) {\r\n\t\t\t\tself.queues[key].shift()();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar exec = function (locked) {\r\n\t\tif (resolved) { // may due to timed out\r\n\t\t\treturn done(locked);\r\n\t\t}\r\n\r\n\t\tif (timer) {\r\n\t\t\tclearTimeout(timer);\r\n\t\t\ttimer = null;\r\n\t\t}\r\n\r\n\t\tif (self.domainReentrant && locked) {\r\n\t\t\tself.domains[key] = process.domain;\r\n\t\t}\r\n\r\n\t\tvar maxExecutionTime = opts.maxExecutionTime || self.maxExecutionTime;\r\n\t\tif (maxExecutionTime) {\r\n\t\t\texecutionTimer = setTimeout(function () {\r\n\t\t\t\tif (!!self.queues[key]) {\r\n\t\t\t\t\tdone(locked, new Error('Maximum execution time is exceeded ' + key));\r\n\t\t\t\t}\r\n\t\t\t}, maxExecutionTime);\r\n\t\t}\r\n\r\n\t\t// Callback mode\r\n\t\tif (fn.length === 1) {\r\n\t\t\tvar called = false;\r\n\t\t\ttry {\r\n\t\t\t\tfn(function (err, ret) {\r\n\t\t\t\t\tif (!called) {\r\n\t\t\t\t\t\tcalled = true;\r\n\t\t\t\t\t\tdone(locked, err, ret);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} catch (err) {\r\n\t\t\t\t// catching error thrown in user function fn\r\n\t\t\t\tif (!called) {\r\n\t\t\t\t\tcalled = true;\r\n\t\t\t\t\tdone(locked, err);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Promise mode\r\n\t\t\tself._promiseTry(function () {\r\n\t\t\t\treturn fn();\r\n\t\t\t})\r\n\t\t\t.then(function(ret){\r\n\t\t\t\tdone(locked, undefined, ret);\r\n\t\t\t}, function(error){\r\n\t\t\t\tdone(locked, error);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tif (self.domainReentrant && !!process.domain) {\r\n\t\texec = process.domain.bind(exec);\r\n\t}\r\n\r\n\tvar maxPending = opts.maxPending || self.maxPending;\r\n\r\n\tif (!self.queues[key]) {\r\n\t\tself.queues[key] = [];\r\n\t\texec(true);\r\n\t}\r\n\telse if (self.domainReentrant && !!process.domain && process.domain === self.domains[key]) {\r\n\t\t// If code is in the same domain of current running task, run it directly\r\n\t\t// Since lock is re-enterable\r\n\t\texec(false);\r\n\t}\r\n\telse if (self.queues[key].length >= maxPending) {\r\n\t\tdone(false, new Error('Too many pending tasks in queue ' + key));\r\n\t}\r\n\telse {\r\n\t\tvar taskFn = function () {\r\n\t\t\texec(true);\r\n\t\t};\r\n\t\tif (opts.skipQueue) {\r\n\t\t\tself.queues[key].unshift(taskFn);\r\n\t\t} else {\r\n\t\t\tself.queues[key].push(taskFn);\r\n\t\t}\r\n\r\n\t\tvar timeout = opts.timeout || self.timeout;\r\n\t\tif (timeout) {\r\n\t\t\ttimer = setTimeout(function () {\r\n\t\t\t\ttimer = null;\r\n\t\t\t\tdone(false, new Error('async-lock timed out in queue ' + key));\r\n\t\t\t}, timeout);\r\n\t\t}\r\n\t}\r\n\r\n\tvar maxOccupationTime = opts.maxOccupationTime || self.maxOccupationTime;\r\n\t\tif (maxOccupationTime) {\r\n\t\t\toccupationTimer = setTimeout(function () {\r\n\t\t\t\tif (!!self.queues[key]) {\r\n\t\t\t\t\tdone(false, new Error('Maximum occupation time is exceeded in queue ' + key));\r\n\t\t\t\t}\r\n\t\t\t}, maxOccupationTime);\r\n\t\t}\r\n\r\n\tif (deferred) {\r\n\t\treturn deferred;\r\n\t}\r\n};\r\n\r\n/*\r\n * Below is how this function works:\r\n *\r\n * Equivalent code:\r\n * self.acquire(key1, function(cb){\r\n *     self.acquire(key2, function(cb){\r\n *         self.acquire(key3, fn, cb);\r\n *     }, cb);\r\n * }, cb);\r\n *\r\n * Equivalent code:\r\n * var fn3 = getFn(key3, fn);\r\n * var fn2 = getFn(key2, fn3);\r\n * var fn1 = getFn(key1, fn2);\r\n * fn1(cb);\r\n */\r\nAsyncLock.prototype._acquireBatch = function (keys, fn, cb, opts) {\r\n\tif (typeof (cb) !== 'function') {\r\n\t\topts = cb;\r\n\t\tcb = null;\r\n\t}\r\n\r\n\tvar self = this;\r\n\tvar getFn = function (key, fn) {\r\n\t\treturn function (cb) {\r\n\t\t\tself.acquire(key, fn, cb, opts);\r\n\t\t};\r\n\t};\r\n\r\n\tvar fnx = keys.reduceRight(function (prev, key) {\r\n\t\treturn getFn(key, prev);\r\n\t}, fn);\r\n\r\n\tif (typeof (cb) === 'function') {\r\n\t\tfnx(cb);\r\n\t}\r\n\telse {\r\n\t\treturn new this.Promise(function (resolve, reject) {\r\n\t\t\t// check for promise mode in case keys is empty array\r\n\t\t\tif (fnx.length === 1) {\r\n\t\t\t\tfnx(function (err, ret) {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\treject(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tresolve(ret);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tresolve(fnx());\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n};\r\n\r\n/*\r\n *\tWhether there is any running or pending asyncFunc\r\n *\r\n *\t@param {String} key\r\n */\r\nAsyncLock.prototype.isBusy = function (key) {\r\n\tif (!key) {\r\n\t\treturn Object.keys(this.queues).length > 0;\r\n\t}\r\n\telse {\r\n\t\treturn !!this.queues[key];\r\n\t}\r\n};\r\n\r\n/**\r\n * Promise.try() implementation to become independent of Q-specific methods\r\n */\r\nAsyncLock.prototype._promiseTry = function(fn) {\r\n\ttry {\r\n\t\treturn this.Promise.resolve(fn());\r\n\t} catch (e) {\r\n\t\treturn this.Promise.reject(e);\r\n\t}\r\n};\r\n\r\nmodule.exports = AsyncLock;\r\n", "'use strict';\r\nmodule.exports = require('./lib');\r\n", "import AsyncLock from \"async-lock\";\r\nconst TINA_HOST = \"content.tinajs.io\";\r\nfunction replaceGithubPathSplit(url, replacement) {\r\n  const parts = url.split(\"github/\");\r\n  if (parts.length > 1 && replacement) {\r\n    return parts[0] + \"github/\" + replacement;\r\n  } else {\r\n    return url;\r\n  }\r\n}\r\nclass TinaClient {\r\n  constructor({\r\n    token,\r\n    url,\r\n    queries,\r\n    errorPolicy,\r\n    cacheDir\r\n  }) {\r\n    this.initialized = false;\r\n    this.apiUrl = url;\r\n    this.readonlyToken = token == null ? void 0 : token.trim();\r\n    this.queries = queries(this);\r\n    this.errorPolicy = errorPolicy || \"throw\";\r\n    this.cacheDir = cacheDir || \"\";\r\n  }\r\n  async init() {\r\n    if (this.initialized) {\r\n      return;\r\n    }\r\n    try {\r\n      if (this.cacheDir && typeof window === \"undefined\" && typeof require !== \"undefined\") {\r\n        const { NodeCache } = await import(\"./node-cache-5e8db9f0.mjs\");\r\n        this.cache = await NodeCache(this.cacheDir);\r\n        this.cacheLock = new AsyncLock();\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    this.initialized = true;\r\n  }\r\n  async request({ errorPolicy, ...args }, options) {\r\n    var _a;\r\n    await this.init();\r\n    const errorPolicyDefined = errorPolicy || this.errorPolicy;\r\n    const headers = new Headers();\r\n    if (this.readonlyToken) {\r\n      headers.append(\"X-API-KEY\", this.readonlyToken);\r\n    }\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n    if (options == null ? void 0 : options.fetchOptions) {\r\n      if ((_a = options == null ? void 0 : options.fetchOptions) == null ? void 0 : _a.headers) {\r\n        Object.entries(options.fetchOptions.headers).forEach(([key2, value]) => {\r\n          headers.append(key2, value);\r\n        });\r\n      }\r\n    }\r\n    const { headers: _, ...providedFetchOptions } = (options == null ? void 0 : options.fetchOptions) || {};\r\n    const bodyString = JSON.stringify({\r\n      query: args.query,\r\n      variables: (args == null ? void 0 : args.variables) || {}\r\n    });\r\n    const optionsObject = {\r\n      method: \"POST\",\r\n      headers,\r\n      body: bodyString,\r\n      redirect: \"follow\",\r\n      ...providedFetchOptions\r\n    };\r\n    const draftBranch = headers.get(\"x-branch\");\r\n    const url = replaceGithubPathSplit((args == null ? void 0 : args.url) || this.apiUrl, draftBranch);\r\n    let key = \"\";\r\n    let result;\r\n    if (this.cache) {\r\n      key = this.cache.makeKey(bodyString);\r\n      await this.cacheLock.acquire(key, async () => {\r\n        result = await this.cache.get(key);\r\n        if (!result) {\r\n          result = await requestFromServer(\r\n            url,\r\n            args.query,\r\n            optionsObject,\r\n            errorPolicyDefined\r\n          );\r\n          await this.cache.set(key, result);\r\n        }\r\n      });\r\n    } else {\r\n      result = await requestFromServer(\r\n        url,\r\n        args.query,\r\n        optionsObject,\r\n        errorPolicyDefined\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n}\r\nasync function requestFromServer(url, query, optionsObject, errorPolicyDefined) {\r\n  const res = await fetch(url, optionsObject);\r\n  if (!res.ok) {\r\n    let additionalInfo = \"\";\r\n    if (res.status === 401) {\r\n      additionalInfo = \"Please check that your client ID, URL and read only token are configured properly.\";\r\n    }\r\n    throw new Error(\r\n      `Server responded with status code ${res.status}, ${res.statusText}. ${additionalInfo ? additionalInfo : \"\"} Please see our FAQ for more information: https://tina.io/docs/errors/faq/`\r\n    );\r\n  }\r\n  const json = await res.json();\r\n  if (json.errors && errorPolicyDefined === \"throw\") {\r\n    throw new Error(\r\n      `Unable to fetch, please see our FAQ for more information: https://tina.io/docs/errors/faq/\r\n      Errors: \r\n\t${json.errors.map((error) => error.message).join(\"\\n\")}`\r\n    );\r\n  }\r\n  const result = {\r\n    data: json == null ? void 0 : json.data,\r\n    errors: (json == null ? void 0 : json.errors) || null,\r\n    query\r\n  };\r\n  return result;\r\n}\r\nfunction createClient(args) {\r\n  const client = new TinaClient(args);\r\n  return client;\r\n}\r\nexport {\r\n  TINA_HOST,\r\n  TinaClient,\r\n  createClient\r\n};\r\n"],
  "mappings": "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",
  "names": ["AsyncLock", "fn", "cb", "AsyncLock"]
}
